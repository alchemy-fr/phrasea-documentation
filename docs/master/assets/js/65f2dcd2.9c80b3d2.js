"use strict";(self.webpackChunkphrasea=self.webpackChunkphrasea||[]).push([[4181],{37988:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/xdebug-php-storm-a3decddff863b5d14ce2381f76c511e9.png"},86260:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>t,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"phrasea/Developement/xdebug","title":"Debugging PHP application with Xdebug","description":"You can enable Xdebug with:","source":"@site/docs/phrasea/Developement/xdebug.md","sourceDirName":"phrasea/Developement","slug":"/phrasea/Developement/xdebug","permalink":"/docs/phrasea/Developement/xdebug","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Upgrade PostgreSQL server version","permalink":"/docs/phrasea/Developement/postgre-migration"},"next":{"title":"Setup CloudFront","permalink":"/docs/phrasea/Infra/Storage/cloudfront"}}');var a=r(86070),o=r(6738);const t={},i="Debugging PHP application with Xdebug",d={},p=[{value:"Debugging commands",id:"debugging-commands",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"debugging-php-application-with-xdebug",children:"Debugging PHP application with Xdebug"})}),"\n",(0,a.jsx)(n.p,{children:"You can enable Xdebug with:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"export XDEBUG_ENABLED=1\ndocker-compose up -d\n"})}),"\n",(0,a.jsx)(n.p,{children:"Remote host is fixed because of the subnet network from compose."}),"\n",(0,a.jsx)(n.p,{children:"You need to configure file mapping in your IDE."}),"\n",(0,a.jsxs)(n.p,{children:["Each application should have its server configured in PhpStorm.\nEach server name should follow the following pattern: ",(0,a.jsx)(n.code,{children:"docker-server-SERVICE"})," (e.g. ",(0,a.jsx)(n.code,{children:"docker-server-databox"}),").\nThen you need to enable path mappings for the server. See the example below:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"PhpStorm mapping",src:r(37988).A+"",width:"1536",height:"950"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Configure the ",(0,a.jsx)(n.code,{children:"Absolute path on the server"})," to ",(0,a.jsx)(n.code,{children:"/srv/app"})," at the application project path (e.g. ",(0,a.jsx)(n.code,{children:"~/projects/phrasea/databox/api"})," in this case)."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"For the uploader application you would have:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["a server named ",(0,a.jsx)(n.code,{children:"docker-server-uploader"})," in PhpStorm"]}),"\n",(0,a.jsxs)(n.li,{children:["set the path mapping: ",(0,a.jsx)(n.code,{children:"~/projects/phrasea/uploader/api"})," ->  ",(0,a.jsx)(n.code,{children:"/srv/app"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"debugging-commands",children:"Debugging commands"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'XDEBUG_ENABLED=1 dc run --rm dev\ncd databox/api\nexport XDEBUG_SESSION="phpstorm"\nsf app:command\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);