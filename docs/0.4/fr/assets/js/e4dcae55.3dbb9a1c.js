"use strict";(self.webpackChunkphrasea=self.webpackChunkphrasea||[]).push([[9651],{20389:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"phrasea/Databox/Renditions/rendition_factory","title":"Rendition Factory","description":"imagine transformer module","source":"@site/docs/phrasea/Databox/Renditions/rendition_factory.md","sourceDirName":"phrasea/Databox/Renditions","slug":"/phrasea/Databox/Renditions/rendition_factory","permalink":"/fr/docs/phrasea/Databox/Renditions/rendition_factory","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Rendition Factory","comment":"Generated by the DocumentationDumperCommand, do not modify"},"sidebar":"tutorialSidebar","previous":{"title":"Databox Indexer","permalink":"/fr/docs/phrasea/Databox/Indexer/databox-indexer"},"next":{"title":"Permissions","permalink":"/fr/docs/phrasea/Databox/permissions"}}');var r=t(86070),d=t(6738);const o={title:"Rendition Factory",comment:"Generated by the DocumentationDumperCommand, do not modify"},s=void 0,a={},l=[{value:"<code>imagine</code> transformer module",id:"imagine-transformer-module",level:2},{value:"<code>void</code> transformer module",id:"void-transformer-module",level:2},{value:"<code>video_summary</code> transformer module",id:"video_summary-transformer-module",level:2},{value:"Supported output <code>format</code>s.",id:"supported-output-formats",level:3},{value:"<code>ffmpeg</code> transformer module",id:"ffmpeg-transformer-module",level:2},{value:"Supported output <code>format</code>s.",id:"supported-output-formats-1",level:3},{value:"List of <code>ffmpeg</code> filters:",id:"list-of-ffmpeg-filters",level:3},{value:"<code>video_to_frame</code> transformer module",id:"video_to_frame-transformer-module",level:2},{value:"Supported output <code>format</code>s.",id:"supported-output-formats-2",level:3},{value:"<code>video_to_animation</code> transformer module",id:"video_to_animation-transformer-module",level:2},{value:"Supported output <code>format</code>s.",id:"supported-output-formats-3",level:3},{value:"<code>album_artwork</code> transformer module",id:"album_artwork-transformer-module",level:2},{value:"Supported output <code>format</code>s.",id:"supported-output-formats-4",level:3},{value:"<code>document_to_pdf</code> transformer module",id:"document_to_pdf-transformer-module",level:2},{value:"<code>pdf_to_image</code> transformer module",id:"pdf_to_image-transformer-module",level:2},{value:"<code>set_dpi</code> transformer module",id:"set_dpi-transformer-module",level:2},{value:"<code>download</code> transformer module",id:"download-transformer-module",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"imagine-transformer-module",children:[(0,r.jsx)(n.code,{children:"imagine"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Transform an image with some filter."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               imagine # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # Output image format\n        format:               ~ # Example: jpeg\n        # Filters to apply to the image\n        filters:\n            # Filter performs sizing transformations (specifically relative resizing)\n            relative_resize:\n                heighten:             ~ # Example: 'value \"60\" => given 50x40px, output 75x60px using \"heighten\" option'\n                widen:                ~ # Example: 'value \"32\" => given 50x40px, output 32x26px using \"widen\" option'\n                increase:             ~ # Example: 'value \"10\" => given 50x40px, output 60x50px, using \"increase\" option'\n                scale:                ~ # Example: 'value \"2.5\" => given 50x40px, output 125x100px using \"scale\" option'\n            # use and setup the resize filter\n            resize:\n                # set the size of the resizing area [width,height]\n                size:\n                    0:                    ~ # Example: '120'\n                    1:                    ~ # Example: '90'\n            # Filter performs thumbnail transformations (which includes scaling and potentially cropping operations)\n            thumbnail:\n                # set the thumbnail size to [width,height] pixels\n                size:\n                    0:                    ~ # Example: '32'\n                    1:                    ~ # Example: '32'\n                # Sets the desired resize method: \"outbound\" crops the image as required, while \"inset\" performs a non-cropping relative resize.\n                mode:                 ~ # Example: inset\n                # Toggles allowing image up-scaling when the image is smaller than the desired thumbnail size. Value: true or false\n                allow_upscale:        ~\n            # filter performs sizing transformations (which includes cropping operations)\n            crop:\n                # set the size of the cropping area [width,height]\n                size:\n                    0:                    ~ # Example: '300'\n                    1:                    ~ # Example: '600'\n                # Sets the top, left-post anchor coordinates where the crop operation starts[x, y]\n                start:\n                    0:                    ~ # Example: '32'\n                    1:                    ~ # Example: '160'\n            # filter adds a watermark to an existing image\n            watermark:\n                # Path to the watermark image\n                image:                ~\n            # filter fill background color\n            background_fill:\n                # Sets the background color HEX value. The default color is white (#fff).\n                color:                ~\n                # Sets the background opacity. The value should be within a range of 0 (fully transparent) - 100 (opaque). default opacity 100\n                opacity:              ~\n            #  filter performs file transformations (which includes metadata removal)\n            strip:                ~\n            # filter performs sizing transformations (specifically image scaling)\n            scale:\n                # Sets the \"desired dimensions\" [width, height], from which a relative resize is performed within these constraints.\n                dim:\n                    0:                    ~ # Example: '800'\n                    1:                    ~ # Example: '1000'\n                # Sets the \"ratio multiple\" which initiates a proportional scale operation computed by multiplying all image sides by this value.\n                to:                   ~ # Example: '1.5'\n            #  filter performs sizing transformations (specifically image up-scaling)\n            upscale:\n                # Sets the \"desired min dimensions\" [width, height], from which an up-scale is performed to meet the passed constraints.\n                min:\n                    0:                    ~ # Example: '1200'\n                    1:                    ~ # Example: '800'\n                # Sets the \"ratio multiple\" which initiates a proportional scale operation computed by multiplying all image sides by this value.\n                by:                   ~ # Example: '0.7'\n            # filter performs sizing transformations (specifically image down-scaling)\n            downscale:\n                # Sets the \"desired max dimensions\" [width, height], from which a down-scale is performed to meet the passed constraints\n                max:\n                    0:                    ~ # Example: '1980'\n                    1:                    ~ # Example: '1280'\n                # Sets the \"ratio multiple\" which initiates a proportional scale operation computed by multiplying all image sides by this value.\n                by:                   ~ # Example: '0.6'\n            # filter performs orientation transformations (which includes rotating the image)\n            auto_rotate:          ~\n            # filter performs orientation transformations (specifically image rotation)\n            rotate:\n                # Sets the rotation angle in degrees. The default value is 0.\n                angle:                ~ # Example: '90'\n            # filter performs orientation transformations (specifically image flipping)\n            flip:\n                # Sets the \"flip axis\" that defines the axis on which to flip the image. Valid values: x, horizontal, y, vertical\n                axis:                 ~ # Example: x\n            # filter performs file transformations (which includes modifying the encoding method)\n            interlace:\n                # Sets the interlace mode to encode the file with. Valid values: none, line, plane, and partition.\n                mode:                 ~ # Example: line\n            # filter provides a resampling transformation by allows you to change the resolution of an image\n            resample:\n                # Sets the unit to use for pixel density, either \"pixels per inch\" or \"pixels per centimeter\". Valid values: ppi and ppc\n                unit:                 ~ # Example: ppi\n                # Sets the horizontal resolution in the specified unit\n                x:                    ~ # Example: '300'\n                # Sets the vertical resolution in the specified unit\n                y:                    ~ # Example: '200'\n                # Sets the optional temporary work directory. This filter requires a temporary location to save out and read back in the image binary, as these operations are requires to resample an image. By default, it is set to the value of the sys_get_temp_dir() function\n                tmp_dir:              ~ # Example: /my/custom/temporary/directory/path\n            # filter performs thumbnail transformations (which includes scaling and potentially cropping operations)\n            fixed:\n                # Sets the \"desired width\" which initiates a proportional scale operation that up- or down-scales until the image width matches this value.\n                width:                ~ # Example: '120'\n                # Sets the \"desired height\" which initiates a proportional scale operation that up- or down-scales until the image height matches this value\n                height:               ~ # Example: '90'\n            # use stamp\n            stamp:\n                # path to the font file ttf\n                font:                 ~\n                # available position value: topleft, top, topright, left, center, right, bottomleft, bottom, bottomright, under, above\n                position:             ~\n                angle:                0\n                # font size\n                size:                 16\n                color:                '#000000'\n                # the font alpha value\n                alpha:                100\n                # text to stamp\n                text:                 ~\n                # text width\n                width:                ~\n                # text background, option use for position under or above\n                background:           '#FFFFFF'\n                # background transparancy, option use for position under or above\n                transparency:         null\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"void-transformer-module",children:[(0,r.jsx)(n.code,{children:"void"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"A module that does nothing (testing purpose)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               void # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"video_summary-transformer-module",children:[(0,r.jsx)(n.code,{children:"video_summary"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Assemble multiple extracts (clips) of the video."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               video_summary # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # Skip video start, in seconds or timecode\n        start:                0 # Example: '2.5 ; \"00:00:02.50\" ; \"{{ attr.start }}\"'\n        # Extract one video clip every period, in seconds or timecode\n        period:               ~ # Required, Example: '5 ; \"00:00:05.00\"'\n        # Duration of each clip, in seconds or timecode\n        duration:             ~ # Required, Example: '0.25 ; \"00:00:00.25\"'\n        # output format\n        format:               ~ # Required, Example: video-mpeg\n        # extension of the output file\n        extension:            'default extension from format' # Example: mpeg\n        # Change the number of ffmpeg passes\n        passes:               2\n        # Change the default timeout used by ffmpeg (defaults to symphony process timeout)\n        timeout:              ~\n        # Change the default number of threads used by ffmpeg\n        threads:              ~\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"supported-output-formats",children:["Supported output ",(0,r.jsx)(n.code,{children:"format"}),"s."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Family"}),(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Mime type"}),(0,r.jsx)(n.th,{children:"Extensions"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"video"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-mkv"}),(0,r.jsx)(n.td,{children:"video/x-matroska"}),(0,r.jsx)(n.td,{children:"mkv"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-mpeg4"}),(0,r.jsx)(n.td,{children:"video/mp4"}),(0,r.jsx)(n.td,{children:"mp4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-mpeg"}),(0,r.jsx)(n.td,{children:"video/mpeg"}),(0,r.jsx)(n.td,{children:"mpeg"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-quicktime"}),(0,r.jsx)(n.td,{children:"video/quicktime"}),(0,r.jsx)(n.td,{children:"mov"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-webm"}),(0,r.jsx)(n.td,{children:"video/webm"}),(0,r.jsx)(n.td,{children:"webm"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-ogg"}),(0,r.jsx)(n.td,{children:"video/ogg"}),(0,r.jsx)(n.td,{children:"ogv"})]})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"ffmpeg-transformer-module",children:[(0,r.jsx)(n.code,{children:"ffmpeg"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"apply filters to a video using FFMpeg."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               ffmpeg # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # output format\n        format:               ~\n        # extension of the output file\n        extension:            ~\n        # Change the default video codec used by the output format\n        video_codec:          ~\n        # Change the default audio codec used by the output format\n        audio_codec:          ~\n        # Change the default video_kilobitrate used by the output format\n        video_kilobitrate:    ~\n        # Change the default audio_kilobitrate used by the output format\n        audio_kilobitrate:    ~\n        # Change the number of ffmpeg passes\n        passes:               2\n        # Change the default timeout used by ffmpeg (defaults to symphony process timeout)\n        timeout:              ~\n        # Change the default number of threads used by ffmpeg\n        threads:              ~\n        # Filters to apply to the video\n        filters:\n            # Prototype: see list of available filters below\n            -\n                # Name of the filter\n                name:                 ~ # Required\n                # Whether to enable the filter\n                enabled:              true\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"supported-output-formats-1",children:["Supported output ",(0,r.jsx)(n.code,{children:"format"}),"s."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Family"}),(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Mime type"}),(0,r.jsx)(n.th,{children:"Extensions"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"audio"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"audio-wav"}),(0,r.jsx)(n.td,{children:"audio/wav"}),(0,r.jsx)(n.td,{children:"wav"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"audio-aac"}),(0,r.jsx)(n.td,{children:"audio/aac"}),(0,r.jsx)(n.td,{children:"aac, m4a"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"audio-mp3"}),(0,r.jsx)(n.td,{children:"audio/mp3"}),(0,r.jsx)(n.td,{children:"mp3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"audio-ogg"}),(0,r.jsx)(n.td,{children:"audio/ogg"}),(0,r.jsx)(n.td,{children:"oga, ogg"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"image"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-jpeg"}),(0,r.jsx)(n.td,{children:"image/jpeg"}),(0,r.jsx)(n.td,{children:"jpg, jpeg"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-gif"}),(0,r.jsx)(n.td,{children:"image/gif"}),(0,r.jsx)(n.td,{children:"gif"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-png"}),(0,r.jsx)(n.td,{children:"image/png"}),(0,r.jsx)(n.td,{children:"png"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-tiff"}),(0,r.jsx)(n.td,{children:"image/tiff"}),(0,r.jsx)(n.td,{children:"tif, tiff"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"video"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-mkv"}),(0,r.jsx)(n.td,{children:"video/x-matroska"}),(0,r.jsx)(n.td,{children:"mkv"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-mpeg4"}),(0,r.jsx)(n.td,{children:"video/mp4"}),(0,r.jsx)(n.td,{children:"mp4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-mpeg"}),(0,r.jsx)(n.td,{children:"video/mpeg"}),(0,r.jsx)(n.td,{children:"mpeg"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-quicktime"}),(0,r.jsx)(n.td,{children:"video/quicktime"}),(0,r.jsx)(n.td,{children:"mov"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-webm"}),(0,r.jsx)(n.td,{children:"video/webm"}),(0,r.jsx)(n.td,{children:"webm"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"video-ogg"}),(0,r.jsx)(n.td,{children:"video/ogg"}),(0,r.jsx)(n.td,{children:"ogv"})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"list-of-ffmpeg-filters",children:["List of ",(0,r.jsx)(n.code,{children:"ffmpeg"})," filters:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pre_clip"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Clip the video before applying other filters\n-\n    name:                 pre_clip # Required\n    enabled:              true\n    # Offset of frame in seconds or timecode\n    start:                0 # Example: \'2.5 ; "00:00:02.500" ; "{{ attr.start }}"\'\n    # Duration in seconds or timecode\n    duration:             null # Example: \'30 ; "00:00:30" ; "{{ input.duration/2 }}"\'\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"clip"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Clip the video or audio\n-\n    name:                 clip # Required\n    enabled:              true\n    # Offset of frame in seconds or timecode\n    start:                0 # Example: \'2.5 ; "00:00:02.500" ; "{{ attr.start }}"\'\n    # Duration in seconds or timecode\n    duration:             null # Example: \'30 ; "00:00:30" ; "{{ input.duration/2 }}"\'\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"remove_audio"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Remove the audio from the video\n-\n    name:                 remove_audio # Required\n    enabled:              true\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resample_audio"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Resample the audio\n-\n    name:                 resample_audio # Required\n    enabled:              true\n    rate:                 '44100' # Required\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resize"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Resize the video\n-\n    name:                 resize # Required\n    enabled:              true\n    # Width of the video\n    width:                ~ # Required\n    # Height of the video\n    height:               ~ # Required\n    # Resize mode\n    mode:                 inset # Example: inset\n    # Correct the width/height to the closest "standard" size\n    force_standards:      true\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rotate"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Rotate the video\n-\n    name:                 rotate # Required\n    enabled:              true\n    # Angle of rotation [0 | 90 | 180 | 270]\n    angle:                ~ # Required, Example: '90'\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pad"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Pad the video\n-\n    name:                 pad # Required\n    enabled:              true\n    # Width of the video\n    width:                ~ # Required\n    # Height of the video\n    height:               ~ # Required\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"crop"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Crop the video\n-\n    name:                 crop # Required\n    enabled:              true\n    # X coordinate\n    x:                    ~ # Required\n    # Y coordinate\n    y:                    ~ # Required\n    # Width of the video\n    width:                ~ # Required\n    # Height of the video\n    height:               ~ # Required\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"watermark"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Apply a watermark on the video\n-\n    name:                 watermark # Required\n    enabled:              true\n    # "relative" or "absolute" position\n    position:             ~ # Required\n    # Path to the watermark image\n    path:                 ~ # Required\n    # top coordinate (only if position is "relative", set top OR bottom)\n    top:                  ~\n    # bottom coordinate (only if position is "relative", set top OR bottom)\n    bottom:               ~\n    # left coordinate (only if position is "relative", set left OR right)\n    left:                 ~\n    # right coordinate (only if position is "relative", set left OR right)\n    right:                ~\n    # X coordinate (only if position is "absolute")\n    x:                    ~\n    # Y coordinate (only if position is "absolute")\n    y:                    ~\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"framerate"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Change the framerate\n-\n    name:                 framerate # Required\n    enabled:              true\n    # framerate\n    framerate:            ~ # Required\n    # gop\n    gop:                  ~\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"synchronize"})," filter"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# re-synchronize audio and video\n-\n    name:                 synchronize # Required\n    enabled:              true\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"video_to_frame-transformer-module",children:[(0,r.jsx)(n.code,{children:"video_to_frame"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Extract one frame from the video."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               video_to_frame # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # Offset of frame in seconds or timecode\n        start:                0 # Example: '2.5 ; \"00:00:02.50\" ; \"{{ attr.start }}\"'\n        # output format\n        format:               ~ # Required, Example: image-jpeg\n        # extension of the output file\n        extension:            'default extension from format' # Example: jpg\n        # Change the quality of the output file (0-100)\n        quality:              80\n        # Change the number of ffmpeg passes\n        passes:               2\n        # Change the default timeout used by ffmpeg (defaults to symphony process timeout)\n        timeout:              ~\n        # Change the default number of threads used by ffmpeg\n        threads:              ~\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"supported-output-formats-2",children:["Supported output ",(0,r.jsx)(n.code,{children:"format"}),"s."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Family"}),(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Mime type"}),(0,r.jsx)(n.th,{children:"Extensions"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"image"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-jpeg"}),(0,r.jsx)(n.td,{children:"image/jpeg"}),(0,r.jsx)(n.td,{children:"jpg, jpeg"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-gif"}),(0,r.jsx)(n.td,{children:"image/gif"}),(0,r.jsx)(n.td,{children:"gif"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-png"}),(0,r.jsx)(n.td,{children:"image/png"}),(0,r.jsx)(n.td,{children:"png"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-tiff"}),(0,r.jsx)(n.td,{children:"image/tiff"}),(0,r.jsx)(n.td,{children:"tif, tiff"})]})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"video_to_animation-transformer-module",children:[(0,r.jsx)(n.code,{children:"video_to_animation"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Converts a video to an animated GIF / PNG."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'-\n    module:               video_to_animation # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # Start time in seconds or timecode\n        start:                0 # Example: \'2.5 ; "00:00:02.50" ; "{{ attr.start }}"\'\n        # Duration in seconds or timecode\n        duration:             null # Example: \'30 ; "00:00:30.00" ; "{{ input.duration/2 }}"\'\n        # Frames per second\n        fps:                  1\n        # Width in pixels\n        width:                null\n        # Height in pixels\n        height:               null\n        # Resize mode\n        mode:                 inset # One of "inset"\n        # output format\n        format:               ~ # Required, Example: animated-png\n        # extension of the output file\n        extension:            \'default extension from format\' # Example: apng\n        # Change the number of ffmpeg passes\n        passes:               2\n        # Change the default timeout used by ffmpeg (defaults to symphony process timeout)\n        timeout:              ~\n        # Change the default number of threads used by ffmpeg\n        threads:              ~\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"supported-output-formats-3",children:["Supported output ",(0,r.jsx)(n.code,{children:"format"}),"s."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Family"}),(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Mime type"}),(0,r.jsx)(n.th,{children:"Extensions"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"animation"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"animated-gif"}),(0,r.jsx)(n.td,{children:"image/gif"}),(0,r.jsx)(n.td,{children:"gif"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"animated-png"}),(0,r.jsx)(n.td,{children:"image/apng"}),(0,r.jsx)(n.td,{children:"apng, png"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"animated-webp"}),(0,r.jsx)(n.td,{children:"image/webp"}),(0,r.jsx)(n.td,{children:"webp"})]})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"album_artwork-transformer-module",children:[(0,r.jsx)(n.code,{children:"album_artwork"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Extract the artwork (cover) of an audio file."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               album_artwork # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # output format\n        format:               ~ # Required, Example: image-jpeg\n        # extension of the output file\n        extension:            'default extension from format' # Example: jpg\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"supported-output-formats-4",children:["Supported output ",(0,r.jsx)(n.code,{children:"format"}),"s."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Family"}),(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Mime type"}),(0,r.jsx)(n.th,{children:"Extensions"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"image"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-jpeg"}),(0,r.jsx)(n.td,{children:"image/jpeg"}),(0,r.jsx)(n.td,{children:"jpg, jpeg"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-gif"}),(0,r.jsx)(n.td,{children:"image/gif"}),(0,r.jsx)(n.td,{children:"gif"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-png"}),(0,r.jsx)(n.td,{children:"image/png"}),(0,r.jsx)(n.td,{children:"png"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"image-tiff"}),(0,r.jsx)(n.td,{children:"image/tiff"}),(0,r.jsx)(n.td,{children:"tif, tiff"})]})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"document_to_pdf-transformer-module",children:[(0,r.jsx)(n.code,{children:"document_to_pdf"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Convert any document to PDF format."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               document_to_pdf # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:              []\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"pdf_to_image-transformer-module",children:[(0,r.jsx)(n.code,{children:"pdf_to_image"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Convert the first page of a PDF to an image."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               pdf_to_image # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # Output image extension: jpg, jpeg, png, or webp\n        extension:            jpeg\n        # Resolution of the output image in dpi\n        resolution:           300\n        # Quality of the output image, from 0 to 100\n        quality:              100\n        # Size of the output image, [width, height] in pixels\n        size:\n            # Width of the output image in pixels\n            0:                    ~ # Example: '150'\n            # Height of the output image in pixels\n            1:                    ~ # Example: '100'\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"set_dpi-transformer-module",children:[(0,r.jsx)(n.code,{children:"set_dpi"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Change the dpi metadata of an image (no resampling)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               set_dpi # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        dpi:                  ~ # Required, Example: '72'\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"download-transformer-module",children:[(0,r.jsx)(n.code,{children:"download"})," transformer module"]}),"\n",(0,r.jsx)(n.p,{children:"Download a file to be used as output."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"-\n    module:               download # Required\n    # Description of the module action\n    description:          ~\n    # Whether to enable this module\n    enabled:              true\n    options:\n        # url of the file to download\n        url:                  ~\n"})})]})}function c(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);