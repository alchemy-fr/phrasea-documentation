"use strict";(self.webpackChunkphrasea=self.webpackChunkphrasea||[]).push([[5928],{33651:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"phrasea/Infra/infra-operating-tasks","title":"Infra operating tasks","description":"Initialization (aka migration-0)","source":"@site/docs/phrasea/Infra/infra-operating-tasks.md","sourceDirName":"phrasea/Infra","slug":"/phrasea/Infra/infra-operating-tasks","permalink":"/docs/phrasea/Infra/infra-operating-tasks","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Backup and Restore","permalink":"/docs/phrasea/Infra/backup-restore"},"next":{"title":"Deploy stack to minikube","permalink":"/docs/phrasea/Infra/minikube"}}');var t=n(86070),r=n(6738);const s={},o="Infra operating tasks",c={},l=[{value:"Initialization (aka migration-0)",id:"initialization-aka-migration-0",level:2},{value:"Client configuration",id:"client-configuration",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"infra-operating-tasks",children:"Infra operating tasks"})}),"\n",(0,t.jsx)(i.h2,{id:"initialization-aka-migration-0",children:"Initialization (aka migration-0)"}),"\n",(0,t.jsx)(i.p,{children:"The first time the stack is deployed we need to initialize some things:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Create databases"}),"\n",(0,t.jsx)(i.li,{children:"Add vhosts & permissions to rabbitmq"}),"\n",(0,t.jsx)(i.li,{children:"etc."}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["All the operations are described in ",(0,t.jsx)(i.a,{href:"../bin/setup.sh",children:(0,t.jsx)(i.code,{children:"/bin/setup.sh"})}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"client-configuration",children:"Client configuration"}),"\n",(0,t.jsxs)(i.p,{children:["Many containers require the ",(0,t.jsx)(i.a,{href:"../configs/config.json",children:(0,t.jsx)(i.code,{children:"/configs/config.json"})})," to be mounted inside itself.\nThis file is parsed and compiled during the container boot (container's entrypoint actually) in order to gain performance.\nThus, after any change in this file, the container must be restarted (or recreated) to take the new configuration into account.\nThis is the same behaviour as the environment variable change."]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);